(define register-count 256)
(define (register-index index)
  (string->symbol (string-append "r"
								 (atom->string index))))
(macro (defregister title index)
 	   `(define ,title (register-index ,index)))
(defregister ip (- register-count 1))
(defregister lr (- register-count 2))
(defregister sp (- register-count 3))

(define (!three-op op dest src0 src1)
  (list op dest src0 src1))
(define (!two-op op a b)
  (list op a b))
(define (!one-op op a)
  (list op a))

(define (!pop register) (!one-op 'pop register))
(define (!push register) (!one-op 'push register))
(define (!set register value) (!two-op 'set register value))
(define (!move dest src) (!two-op 'move dest src))
(define (!swap reg0 reg1) (!two-op 'swap reg0 reg1))
(define (!load storage addr) (!two-op 'load storage addr))
(define (!store addr value) (!two-op 'store addr value))
(define (!jump addr) (!one-op 'j addr))
(define (!label title) (!one-op '@label title))
(define (!org index) (!one-op '@org index))
(define @data '@data)
(define @code '@code)
(define (!< dest src0 src1) (!three-op 'lt dest src0 src1))
(define (!> dest src0 src1) (!three-op 'gt dest src0 src1))
(define (!jt register immediate) (!two-op 'jt register immediate))
(define (!jf register immediate) (!two-op 'jf register immediate))
(define (!addi dest src0 imm) (!three-op 'addi dest src0 imm))
(define (!add dest src0 src1) (!three-op 'add dest src0 src1))
(define (!system index reg0 reg1) (!three-op index reg0 reg1))
(define (!jl register address) (!two-op 'jl register address))
(define (!jr register) (!one-op 'jr register))
(define (!calli addr) (!jl lr addr))

(define (use-register register . body)
  (list (!push register)
		body
		(!pop register)))

(define (!zero register) (!two-op register 0))
(define (!putc register) (!system 2 register register))
(define (!terminate) (!system 0 'r0 'r0))
(define (scope title . body)
 		(list (!label title)
		 	  body))
(define (!loop title . body)
  (list (!label title)
		body
		(!goto title)))

(define (!at-memory-location location . body)
 		(list (!org location)
		 	  body))

(define (!code . contents)
 		contents)

(define (!return)
 		(!jr lr))

(define (!defunc title . body)
  (list (!label title)
		body
		(!return)))
