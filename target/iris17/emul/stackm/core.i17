; Core iris17 stack machine routines
; r9 is the data stack pointer
@label ADD
    memory pop 0m1111 r9
    memory pop 0m1111 r8
    arithmetic add r9 r8
    return
@label SUB
    arithmetic sub r9 r8
    return
@label MUL
    arithmetic mul r9 r8
    return
@label DIV
    arithmetic div r9 r8
    return
@label REM
    arithmetic rem r9 r8
    return
@label PUSH
    memory push 0m1111 r9
    return
@label POP
    memory pop 0m1111 r9
    return
@label INCREMENT
    arithmetic add immediate r9 0x1
    return
@label DECREMENT
    arithmetic sub immediate r9 0x1
    return
@label DOUBLE
    arithmetic mul immediate r9 0x2
    return
@label HALVE
    arithmetic div immediate r9 0x2
    return
@label STORE
    move 0m1111 addr r9
    move 0m1111 value r8
    memory store 0m1111 0x0
    return
@label LOAD
    move 0m1111 addr r9
    memory load 0m1111 0x0
    move 0m1111 r9 value
    return
@label AND
    logical and r9 r8
    return
@label OR
    logical or r9 r8
    return
@label NOT
    logical not r9
    return
@label XOR
    logical xor r9 r8
    return
@label NAND
    logical nand r9 r8
    return
@label LEFT_SHIFT
    shift left r9 r8
    return
@label RIGHT_SHIFT
    shift right r9 r8
    return

@label DECODE_WORD
    memory pop 0m1111 r9
    memory pop 0m1111 r8
    memory pop 0m1111 r7
    memory push 0m1111 lr
    branch call immediate AND
    swap r8 r7
    memory pop 0m1111 lr
    branch immediate RIGHT_SHIFT

@label ENCODE_WORD_FUNCTIONS
    @dword NOT
    @dword AND
    @dword LEFT_SHIFT
    @dword OR

@label NEXT_FUNCTION
    arithmetic add immediate address 0x2
    branch immediate CALL

@label ARGS4
    memory pop 0m1111 r6
@label ARGS3
    memory pop 0m1111 r7
@label ARGS2
    memory pop 0m1111 r8
@label ARGS1
    memory pop 0m1111 r9
    return



@label ENCODE_WORD
    ; args
    memory push 0m1111 lr
    swap r0 sp
    branch call immediate ARGS4
    swap r0 sp
    swap r9 r8
    set 0m1111 address ENCODE_WORD_FUNCTIONS
    branch call immediate NEXT_FUNCTION
    swap r9 r8
    branch call immediate NEXT_FUNCTION
    swap r8 r6
    swap r7 r9
    branch call immediate NEXT_FUNCTION
    memory pop 0m1111 lr
    move 0m1111 r8 r7
    branch call immediate NEXT_FUNCTION
    return

@label EQ
    compare == none r9 r8
    return

@label IF_THEN_ELSE
    branch if r9 r8

@label IF_THEN_ELSE_CALL
    set 0m1111 address IF_THEN_ELSE
    branch immediate CALL

@label IS_LPAREN
    set 0m0001 r8 0x28
    branch immediate EQ

@label IS_RPAREN
    set 0m0001 r8 0x29
    branch immediate EQ

@label IS_SPACE
    set 0m0001 r8 0x20
    branch immediate EQ

@label IS_SEMICOLON
    set 0m0001 r8 0x3b
    branch immediate EQ

@label IS_NEWLINE
    set 0m0001 r8 0x0a
    branch immediate EQ

@label IS_NULL
    set 0m0000 r8 0x0
    branch immediate EQ

@label ZERO
    set 0m0000 r9 0x0
    return
@label RETURN
    return
@label CALL
    branch address
