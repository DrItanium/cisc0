; IO and other such convenience routines
@code
@label OP_LOAD
	; arg0 - address
	; arg1 - memory space
	; return0 - error?
	; return1 - ret0
	; return2 - ret1
    clear(return0)
    clear(return1)
    clear(return2)
    bieqi(arg1, 0, OP_DATA_LOAD)
    bieqi(arg1, 1, OP_CODE_LOAD)
    bieqi(arg1, 2, OP_IO_LOAD)
	set return0 0x1
	bi OP_LOAD_FAILURE
	@label OP_DATA_LOAD
		ld return1 arg0
		bi OP_LOAD_SUCCESSFUL
	@label OP_CODE_LOAD
		ldc arg0 return1 return2
		bi OP_LOAD_SUCCESSFUL
	@label OP_IO_LOAD
		ldio return1 arg0
		bi OP_STORE_SUCCESSFUL
	@label OP_LOAD_FAILURE
	@label OP_LOAD_SUCCESSFUL
	@label OP_LOAD_DONE
		ret

@label OP_STORE
	; arg0 - memory space
	; arg1 - address
	; arg2 - lower half / value
	; arg3 - upper half (used only in code writes)
	; return0 - error?
	clear(return0)
    bieqi(arg0, 0, OP_DATA_STORE) ; data
    bieqi(arg0, 1, OP_CODE_STORE)
    bieqi(arg0, 2, OP_IO_STORE)
	set return0 0x1
	bi OP_STORE_FAILURE
	@label OP_DATA_STORE
		st arg1 arg2
		bi OP_STORE_SUCCESSFUL
	@label OP_CODE_STORE
		stc arg1 arg2 arg3
		bi OP_STORE_SUCCESSFUL
	@label OP_IO_STORE
		stio arg1 arg2
		bi OP_STORE_SUCCESSFUL
	@label OP_STORE_FAILURE
	@label OP_STORE_SUCCESSFUL
	@label OP_STORE_DONE
		ret

@label IO_READ
	ldio return0 arg0
	ret

@label IO_WRITE
	stio arg1 arg0
	ret
