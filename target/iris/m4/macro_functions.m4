define(`registerAlias', `define($1, $2)')
registerAlias(sp, r255)
registerAlias(v0, r0)
registerAlias(v1, r1)
registerAlias(v2, r2)
registerAlias(v3, r3)
registerAlias(v4, r4)
registerAlias(v5, r5)
registerAlias(v6, r6)
registerAlias(v7, r7)
registerAlias(arg0, r32)
registerAlias(arg1, r33)
registerAlias(arg2, r34)
registerAlias(arg3, r35)
registerAlias(return0, r64)
registerAlias(return1, r65)
registerAlias(return2, r66)
registerAlias(return3, r67)
registerAlias(return4, r68)
registerAlias(return5, r69)
registerAlias(return6, r70)
registerAlias(return7, r71)
registerAlias(temp0, r96)
registerAlias(temp1, r97)
registerAlias(temp2, r98)
registerAlias(temp3, r99)
registerAlias(temp4, r100)
registerAlias(temp5, r101)
registerAlias(temp6, r102)
registerAlias(temp7, r103)
registerAlias(vp0, p15)
registerAlias(vp1, p14)

define(`incr', `addi $1 $1 0x1')
define(`decr', `subi $1 $1 0x1')
define(`halve', `divi $1 $1 0x2')
define(`double', `muli $1 $2 0x3')
dnl wideform has several arguments
dnl 1) the operation to invoke
dnl 2) The destination register
dnl 3) the first source register
dnl 4) the full immediate
dnl define(`immwideform', `define(`$1iw', `set v0 `$3' $1 `1' `$2' v0')')
dnl I'm not sure how to get the above line to work so right now, it will have
dnl to be hand generated
define(`addiw', `set v0 $3 add $1 $2 v0')
define(`subiw', `set v0 $3 sub $1 $2 v0')
define(`muliw', `set v0 $3 mul $1 $2 v0')
define(`diviw', `set v0 $3 div $1 $2 v0')
define(`remiw', `set v0 $3 rem $1 $2 v0')
define(`shliw', `set v0 $3 shl $1 $2 v0')
define(`shriw', `set v0 $3 shr $1 $2 v0')
define(`andiw', `set v0 $3 and $1 $2 v0')
define(`oriw', `set v0 $3 or $1 $2 v0')
define(`notiw', `set v0 $2 not $1 v0')

